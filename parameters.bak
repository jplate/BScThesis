%%%%%% Parameter






:- ensure_loaded('env_b10.pl').




%%%% Bewertung von Aufgabenlösungen



%%% time_eval_factor(TimeRatio, Time_evaluation_factor)
% Liefert zum Verhältnis des Zeitbedarfs der Musterlösung zu dem der Schülerlösung
% den Faktor, mit dem die für die betreffende Aufgabe zu vergebende Punktzahl
% zu multiplizieren ist (den sog. "Evaluierungsfaktor").

time_eval_factor(TimeRatio, TimeEF) :-
	TimeRatio >= 1, !,
	TimeEF is 1 / (log10(TimeRatio + 1) - log10(2) + 1).
	
% Bei Belohnungen sind wir etwas großzügiger und verwenden den natürlichen Logarithmus:
time_eval_factor(TimeRatio, TimeEF) :-
	TimeEF is log(1 / TimeRatio + 1) - log(2) + 1.


%%% space_eval_factor(SpaceRatio, Space_evaluation_factor)
% Liefert den Evaluierungsfaktor für das Verhältnis des Speicherbedarfs der Musterlösung 
% zu dem der Schülerlösung.

space_eval_factor(SpaceRatio, SpaceEF) :-
	SpaceRatio >= 1, !,
	SpaceEF is 1 / (log10(SpaceRatio + 1) - log10(2) + 1).
	
% Bei Belohnungen sind wir etwas großzügiger und verwenden den natürlichen Logarithmus:
space_eval_factor(SpaceRatio, SpaceEF) :-
	SpaceEF is log(1 / SpaceRatio + 1) - log(2) + 1.

	
%%% correctness_eval_factor(CorrectnessRatio, Correctness_evaluation_factor)
% Liefert den Evaluierungsfaktor für den Anteil der Testaufrufe der Schülerfunktion, 
% die ein falsches Resultat lieferten.

correctness_eval_factor(Correctness, Correctness).


%%% operators_hint_eval_factor(EF)
% Liefert den Evaluierungsfaktor für Hinweise, die in der Auflistung der in
% der jeweiligen Musterlösung verwendeten Operatoren bestehen.

operators_hint_eval_factor(0.92).




%%%% Direktiven



%%% directives_marker(+Char)
% Definiert das Zeichen, das Direktiven in einem Lisp-Programm einleitet
% (etwa Aufgabenmarkierungen).

directives_marker(92). %(\)


exercise_marker('A').

repeat_marker('R').

function_marker('F').

equivalence_marker('E').

points_marker('P').

test_parameters_marker(test).




%%%% Einlesen von Lisp-Programmen



%%% tablength(-N)

tablength(8).




%%%% Ausgabe



%%% shown_counter_examples(-N)
% Bestimmt die Anzahl der gezeigten Gegenbeispiele, wenn Schüler- und Musterlösung
% nicht äquivalent sind.

shown_counter_examples(10).




%%%% Namen von Datendateien



errorfile_name(Username, FileName) :-
	concat_atom([error_, Username], RelativeFN),
	name(RelativeFN, RelativeFN1),
	tmp_path(Path, RelativeFN1),
	name(FileName, Path).

 
exm_errorfile_name(Username, FileName) :-
	concat_atom([exm_error_, Username], RelativeFN),
	name(RelativeFN, RelativeFN1),
	tmp_path(Path, RelativeFN1),
	name(FileName, Path).


tracefile_name(Username, FileName) :-
	concat_atom([trace_, Username], RelativeFN),
	name(RelativeFN, RelativeFN1),
	tmp_path(Path, RelativeFN1),
	name(FileName, Path).


opsfile_name(Username, FileName) :-
	concat_atom([ops_, Username], RelativeFN),
	name(RelativeFN, RelativeFN1),
	tmp_path(Path, RelativeFN1),
	name(FileName, Path).

